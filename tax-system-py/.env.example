# ============================================
# CONFIGURACIÓN DE ENTORNO
# Sistema de Gestión Tributaria Paraguay
# ============================================

# Copiar este archivo a .env y completar con valores reales
# NUNCA commitear el archivo .env al repositorio

# ============================================
# ENTORNO
# ============================================
NODE_ENV=production
# Opciones: development, production

# ============================================
# BASE DE DATOS POSTGRESQL
# ============================================
DB_HOST=postgres
# En producción: tu_servidor_db.com

DB_PORT=5432

DB_NAME=tax_system_py

DB_USER=taxuser

DB_PASSWORD=CAMBIAR_ESTE_PASSWORD_POR_UNO_SEGURO
# Generar password seguro:
# openssl rand -base64 32

# ============================================
# AUTENTICACIÓN JWT
# ============================================
JWT_SECRET=CAMBIAR_ESTE_SECRET_POR_UNO_ALEATORIO_DE_32_CARACTERES
# Generar JWT secret seguro:
# node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"

JWT_EXPIRES_IN=7d
# Opciones: 1d, 7d, 30d, etc.

# ============================================
# ENCRIPTACIÓN
# ============================================
ENCRYPTION_KEY=CAMBIAR_ESTA_KEY_POR_UNA_ALEATORIA_DE_32_CARACTERES
# Usado para encriptar credenciales de Marangatu
# Generar encryption key segura:
# node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"

# ============================================
# APIS EXTERNAS
# ============================================

# API REST oficial de la SET
SET_API_BASE_URL=https://servicios.set.gov.py/EsetApiWS/ApiWS

# Sistema Marangatu
MARANGATU_BASE_URL=https://marangatu.set.gov.py

# ============================================
# CONFIGURACIÓN DE EMAIL (OPCIONAL)
# ============================================
# Para notificaciones automáticas por email

SMTP_HOST=smtp.gmail.com
# Otros: smtp.outlook.com, smtp.sendgrid.net, etc.

SMTP_PORT=587
# Opciones: 587 (TLS), 465 (SSL), 25 (sin encripción)

SMTP_SECURE=false
# true para puerto 465, false para puerto 587

SMTP_USER=tu_email@gmail.com
# Tu dirección de email

SMTP_PASSWORD=tu_app_password
# Para Gmail: Generar "App Password" en configuración de cuenta
# https://support.google.com/accounts/answer/185833

EMAIL_FROM=Sistema Tributario <noreply@taxsystem.py>
# Nombre y email del remitente

# ============================================
# CONFIGURACIÓN DE SCRAPING
# ============================================

# Chromium path para Puppeteer (no cambiar en Docker)
PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser

# Skip download de Chromium (ya incluido en imagen Docker)
PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=false

# Timeout para operaciones de scraping (en milisegundos)
SCRAPER_TIMEOUT=30000
# 30 segundos por defecto

# Headless mode (true para producción, false para debugging)
SCRAPER_HEADLESS=true

# ============================================
# CONFIGURACIÓN DE JOBS
# ============================================

# Frecuencia del job de notificaciones (cron expression)
NOTIFICATION_JOB_CRON=0 8 * * *
# Por defecto: 8:00 AM todos los días
# Formato cron: segundo minuto hora día mes día_semana
# Ejemplos:
# 0 8 * * * = 8:00 AM diario
# 0 */6 * * * = Cada 6 horas
# 0 0 * * 1 = Lunes a las 00:00

# Frecuencia del job de scraping automático (cron expression)
AUTO_SCRAPE_JOB_CRON=0 2 * * 1
# Por defecto: 2:00 AM todos los lunes
# Desactivar dejando vacío: AUTO_SCRAPE_JOB_CRON=

# ============================================
# CONFIGURACIÓN DE LOGS
# ============================================

LOG_LEVEL=info
# Opciones: error, warn, info, debug
# Producción: info o warn
# Desarrollo: debug

LOG_FILE_PATH=./logs
# Directorio donde se guardan los logs

LOG_MAX_SIZE=10m
# Tamaño máximo de cada archivo de log

LOG_MAX_FILES=14d
# Retención de logs (14 días por defecto)

# ============================================
# FRONTEND
# ============================================

# URL base del API backend
VITE_API_URL=http://localhost:3001/api
# En producción: https://api.taxsystem.py/api

# Habilitar modo debug en frontend
VITE_APP_DEBUG=false

# ============================================
# REDIS (OPCIONAL - para caching futuro)
# ============================================
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=
# Dejar vacío si no requiere password

# ============================================
# CONFIGURACIÓN DE SEGURIDAD
# ============================================

# CORS - Dominios permitidos (separados por coma)
CORS_ORIGIN=http://localhost:3000,https://taxsystem.py
# En desarrollo: http://localhost:3000
# En producción: https://tu-dominio.com

# Rate limiting
RATE_LIMIT_WINDOW_MS=900000
# 15 minutos en milisegundos

RATE_LIMIT_MAX_REQUESTS=100
# Máximo 100 requests por ventana

# Session timeout (en segundos)
SESSION_TIMEOUT=3600
# 1 hora por defecto

# ============================================
# CONFIGURACIÓN DE BACKUPS (OPCIONAL)
# ============================================

# Activar backups automáticos de PostgreSQL
BACKUP_ENABLED=true

# Directorio de backups
BACKUP_PATH=/backups

# Retención de backups (en días)
BACKUP_RETENTION_DAYS=30

# Hora de ejecución del backup (cron expression)
BACKUP_CRON=0 3 * * *
# Por defecto: 3:00 AM diario

# ============================================
# CONFIGURACIÓN AVANZADA
# ============================================

# Puerto del backend
PORT=3001

# Workers de Node.js (según CPU cores disponibles)
NODE_WORKERS=2

# Tamaño máximo de request body (en MB)
MAX_REQUEST_SIZE=50mb

# Timeout de requests HTTP (en segundos)
REQUEST_TIMEOUT=60

# ============================================
# VARIABLES ESPECÍFICAS DE PRODUCCIÓN
# ============================================

# SSL/TLS
SSL_KEY_PATH=/etc/ssl/private/key.pem
SSL_CERT_PATH=/etc/ssl/certs/cert.pem

# Cloudflare (si se usa)
CLOUDFLARE_ZONE_ID=
CLOUDFLARE_API_TOKEN=

# Sentry (monitoreo de errores)
SENTRY_DSN=

# Google Analytics
GA_TRACKING_ID=

# ============================================
# NOTAS IMPORTANTES
# ============================================

# 1. NUNCA commitear este archivo .env al repositorio
# 2. Agregar .env al .gitignore
# 3. En producción, usar secrets de Docker/Kubernetes
# 4. Rotar secrets regularmente (JWT_SECRET, ENCRYPTION_KEY)
# 5. Usar passwords fuertes (mínimo 32 caracteres aleatorios)
# 6. Activar HTTPS en producción
# 7. Configurar firewall para limitar acceso a puertos
# 8. Monitorear logs regularmente
